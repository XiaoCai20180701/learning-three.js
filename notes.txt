1.搭建html框架
2.渲染并查看三维对象
  场景 scene
  相机 camera
  物体 mesh   --->  几何体geometry / 材质  material
  渲染器  renderer
  灯光 light
  帧动画 requestAnimationFrame

  场景是一个容器，主要用于保存/跟踪所要渲染的物体和使用的光源。

3.

 4.Math.sin() / Math.cos() 使用step变量就可以创建出球体的运行轨迹。

 5.场景对浏览器的自适应
   为浏览器注册一个事件监听器




 二 构建three.js场景的基本组件

 1.创建场景
 一个场景：摄像机 / 光源 / 对象
 摄像机：决定屏幕上哪些东西需要渲染
 光源：决定材质如何显示以及用于产生阴影
 对象：是摄像机透视图里主要的渲染对象，如方块/球体等



 十 加载和使用纹理

 1.将纹理应用于材质
 纹理最基础的用法是作为 贴图 被添加在材质上。

 THREE.ImageUtils.loadTexture
 THREE.ImageUtils.loadTextureCube: 方块纹理

 magFilter:指定纹理如何放大
 minFilter:指定纹理如何缩小
    属性：THREE.NearestFilter(最邻近过滤)
         THREE.LinearFilter(线性过滤) ——> 在放大时会平滑很多，较少出现方块化





